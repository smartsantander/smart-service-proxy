package eu.spitfire_project.smart_service_proxy.backends.parking;

import com.hp.hpl.jena.rdf.model.*;

/**
 * Vocabulary definitions from http://idi.fundacionctic.org/muo/muo-vocab.owl 
 * @author Auto-generated by schemagen on 27 Apr 2012 10:33 
 */
public class Muo_vocabVocab {
    /** <p>The RDF model that holds the vocabulary terms</p> */
    private static Model m_model = ModelFactory.createDefaultModel();
    
    /** <p>The namespace of the vocabulary as a string</p> */
    public static final String NS = "http://purl.oclc.org/NET/muo/muo#";
    
    /** <p>The namespace of the vocabulary as a string</p>
     *  @see #NS */
    public static String getURI() {return NS;}
    
    /** <p>The namespace of the vocabulary as a resource</p> */
    public static final Resource NAMESPACE = m_model.createResource( NS );
    
    /** <p>Alternate (standarized) symbol of the entity</p> */
    public static final Property ALT_SYMBOL = m_model.createProperty( "http://purl.oclc.org/NET/muo/muo#altSymbol" );
    
    /** <p>This property relates a unit with another unit from which the former is derived. 
     *  For instance, square meter derives from meter.</p>
     */
    public static final Property DERIVES_FROM = m_model.createProperty( "http://purl.oclc.org/NET/muo/muo#derivesFrom" );
    
    /** <p>The dimensional size of a simple derived unit, i.e., the exponent of the dimension 
     *  in the dimensional equation. For instance, for square meters, the dimensional 
     *  size is two.</p>
     */
    public static final Property DIMENSIONAL_SIZE = m_model.createProperty( "http://purl.oclc.org/NET/muo/muo#dimensionalSize" );
    
    /** <p>Modification factor that multiples the base value of the unit</p> */
    public static final Property FACTOR = m_model.createProperty( "http://purl.oclc.org/NET/muo/muo#factor" );
    
    /** <p>The time of a particular quality value (e.g. the weight of Carlos yesterday).</p> */
    public static final Property IN_TIME = m_model.createProperty( "http://purl.oclc.org/NET/muo/muo#inTime" );
    
    /** <p>The unit used in the measurement of a particular quality value</p> */
    public static final Property MEASURED_IN = m_model.createProperty( "http://purl.oclc.org/NET/muo/muo#measuredIn" );
    
    /** <p>The physical quality the unit is able to measure.</p> */
    public static final Property MEASURES_QUALITY = m_model.createProperty( "http://purl.oclc.org/NET/muo/muo#measuresQuality" );
    
    /** <p>The modifier prefix that applies to a derived unit of measurement</p> */
    public static final Property MODIFIER_PREFIX = m_model.createProperty( "http://purl.oclc.org/NET/muo/muo#modifierPrefix" );
    
    /** <p>Standarized symbol of the entity</p> */
    public static final Property PREF_SYMBOL = m_model.createProperty( "http://purl.oclc.org/NET/muo/muo#prefSymbol" );
    
    public static final Property QUALITY_LITERAL_VALUE = m_model.createProperty( "http://purl.oclc.org/NET/muo/muo#qualityLiteralValue" );
    
    /** <p>The quality value of a measurable physical quality of an entity or phenomenon.</p> */
    public static final Property QUALITY_VALUE = m_model.createProperty( "http://purl.oclc.org/NET/muo/muo#qualityValue" );
    
    /** <p>Base units are units that have not been derived from any other unit. In turn, 
     *  base units can be used to derive other measurement units. The International 
     *  System of Units (SI), recognizes several base units for base physical qualities 
     *  assumed to be mutually independent.Base units are units that have not been 
     *  derived from any other unit. In turn, base units can be used to derive other 
     *  measurement units.</p>
     */
    public static final Resource BASE_UNIT = m_model.createResource( "http://purl.oclc.org/NET/muo/muo#BaseUnit" );
    
    /** <p>Units that are derived from two or more measurement units (i.e. a derived 
     *  unit which is defined by means of more than one unit in its dimensional equation). 
     *  For instance, the complex derived unit meter per second squared is defined 
     *  by a dimensional equation with two units: m and s2.</p>
     */
    public static final Resource COMPLEX_DERIVED_UNIT = m_model.createResource( "http://purl.oclc.org/NET/muo/muo#ComplexDerivedUnit" );
    
    /** <p>Some physical qualities (such as area, acceleration, etc.), called derived 
     *  physical qualities, are defined in terms of base qualities via a system of 
     *  dimensional equations. The derived units for derived qualities are obtained 
     *  from these equations combinated with the base units.</p>
     */
    public static final Resource DERIVED_UNIT = m_model.createResource( "http://purl.oclc.org/NET/muo/muo#DerivedUnit" );
    
    /** <p>FIX</p> */
    public static final Resource METRIC_UNIT = m_model.createResource( "http://purl.oclc.org/NET/muo/muo#MetricUnit" );
    
    /** <p>The physical qualities such as mass, weight, speed, etc. are kind of properties 
     *  that can be quantified i.e. that can be perceived, measured or even calculated. 
     *  The concept of physical quality is similar to the notion of quality, used 
     *  in metrology, the science of measurement. We distinguish between: 1) A physical 
     *  quality in the general sense: a kind of physical property ascribed to phenomena 
     *  that can be quantified for a particular phenomenon (e.g. length and electrical 
     *  charge); 2) A physical quantity in the particular sense: a quantifiable property 
     *  ascribed to a particular phenomenon (e.g. the weight of my device). MUO only 
     *  uses physical quantities in the general sense.</p>
     */
    public static final Resource PHYSICAL_QUALITY = m_model.createResource( "http://purl.oclc.org/NET/muo/muo#PhysicalQuality" );
    
    /** <p>A prefix (also known as a metric prefix) is a name or associated symbol that 
     *  precedes a unit of measure (or its symbol) to form a decimal multiple or submultiple. 
     *  Prefixes are used to reduce the quantity of zeroes in numerical equivalencies. 
     *  For instance, 1000 meters can be written as 1 kilometer, using the prefix 
     *  kilo, a symbol to represent the number 1000.</p>
     */
    public static final Resource PREFIX = m_model.createResource( "http://purl.oclc.org/NET/muo/muo#Prefix" );
    
    /** <p>The value of an individual quality, for instance, the weight of an individual 
     *  object. If we consider metrology, the value of a physical quality Q is expressed 
     *  as the product of a numerical value {Q} and a physical unit [Q]: Q = {Q} x 
     *  [Q]. In MUO, the class muo:QualityValue is used to represent the values of 
     *  qualities, Q. Instances of this class are related with 1) exactly one unit, 
     *  suitable for measure the physical quality (meters for length, grams for weight, 
     *  etc), by means of the property muo:measuredIn, [Q]; 2) a number, which express 
     *  the relationship between the value and the unit by means of the rdf:value 
     *  property, {Q}; 3) a time, which expresses the quality value along the line 
     *  of time. Quality values can be temporalized, but this is not always necessary.</p>
     */
    public static final Resource QUALITY_VALUE_CLASS = m_model.createResource( "http://purl.oclc.org/NET/muo/muo#QualityValue" );
    
    /** <p>Unit belonging to the International System of Units. The SI recognizes several 
     *  base and derived units for some physical qualities assumed to be mutually 
     *  independent.</p>
     */
    public static final Resource SIUNIT = m_model.createResource( "http://purl.oclc.org/NET/muo/muo#SIUnit" );
    
    /** <p>Units that are derived from exactly one base unit. There are two main possibilities. 
     *  On one hand, there are units that are derived by adding a prefix to the unit. 
     *  The prefix is a name or associated symbol (e.g. kilo) that precedes a unit 
     *  of measure (e.g. meter) to form a decimal multiple or submultiple (e.g. Kilometer). 
     *  Derived units, obtained by the application of a prefix, measure the same physical 
     *  quality as its base unit. On the other hand, there are another kind of simple 
     *  derived units that are also obtained from exactly one base unit but they measure 
     *  a different physical quality. They are obtained by changing the exponent of 
     *  the unit in the dimensional equation. For instance, this is how square meters 
     *  are derived from meters. This exponent is represented in MUO with the datatype 
     *  property muo:dimensionalSize. Combining this two patterns we can represent 
     *  units that are obtained from a prefix and that have a dimension size different 
     *  from 1, for instance, the unit square kilometer.</p>
     */
    public static final Resource SIMPLE_DERIVED_UNIT = m_model.createResource( "http://purl.oclc.org/NET/muo/muo#SimpleDerivedUnit" );
    
    /** <p>Measurement units are standards for measurement of physical properties or 
     *  qualities. Every unit is related to a particular kind of property. For instance, 
     *  the meter unit is uniquely related to the length property. Under our ontological 
     *  approach, units are abstract spaces used as a reference metrics for quality 
     *  spaces, such as physical qualia, and they are counted by some number. For 
     *  instance, weight-units define some quality spaces for the weight-quality where 
     *  specific weights of objects, like devices or persons, are located by means 
     *  of comparisons with the proper weight-value of the selected weight-unit.</p>
     */
    public static final Resource UNIT_OF_MEASUREMENT = m_model.createResource( "http://purl.oclc.org/NET/muo/muo#UnitOfMeasurement" );
    
}
